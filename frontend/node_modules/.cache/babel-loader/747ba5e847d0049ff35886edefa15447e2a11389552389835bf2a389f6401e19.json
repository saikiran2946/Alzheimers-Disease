{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIRAN\\\\OneDrive\\\\Documents\\\\Desktop\\\\New folder\\\\frontend\\\\src\\\\Prediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Prediction.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prediction = () => {\n  _s();\n  const [features, setFeatures] = useState({\n    Age: \"\",\n    BMI: \"\",\n    DietQuality: \"\",\n    SleepQuality: \"\",\n    CholesterolTotal: \"\",\n    CholesterolHDL: \"\",\n    CholesterolTriglycerides: \"\",\n    MMSE: \"\",\n    FunctionalAssessment: \"\",\n    MemoryComplaints: \"\",\n    ADL: \"\",\n    BehavioralProblems: \"\"\n  });\n  const [prediction, setPrediction] = useState(null);\n  const [error, setError] = useState(\"\");\n  const handleChange = e => {\n    setFeatures({\n      ...features,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handlePrediction = async () => {\n    setError(\"\"); // Clear previous errors\n    setPrediction(null); // Reset previous results\n\n    // Convert features to an array of numbers and validate input\n    const featureValues = Object.values(features).map(value => {\n      const num = parseFloat(value);\n      return isNaN(num) ? null : num;\n    });\n    if (featureValues.includes(null)) {\n      setError(\"Please enter all feature values correctly.\");\n      return;\n    }\n    console.log(\"Sending features:\", featureValues); // Debugging log\n\n    try {\n      // Send the data to Flask backend\n      const response = await axios.post(\"http://127.0.0.1:5000/predict\", {\n        features: featureValues\n      });\n      setPrediction(response.data.result); // Ensure correct key from backend\n    } catch (error) {\n      setError(\"Prediction failed. Check the inputs and try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"prediction-title\",\n      children: \"Alzheimer\\u2019s Disease Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-form\",\n      children: Object.keys(features).map((key, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: key,\n          children: [key, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: key,\n          type: \"number\",\n          name: key,\n          placeholder: `Enter ${key}`,\n          value: features[key],\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"predict-btn\",\n      onClick: handlePrediction,\n      children: \"Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-box\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-box\",\n      children: [\"Result: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Prediction, \"m1rPZBWhpQgW79yqVg9n1f3YugA=\");\n_c = Prediction;\nexport default Prediction;\nvar _c;\n$RefreshReg$(_c, \"Prediction\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Prediction","_s","features","setFeatures","Age","BMI","DietQuality","SleepQuality","CholesterolTotal","CholesterolHDL","CholesterolTriglycerides","MMSE","FunctionalAssessment","MemoryComplaints","ADL","BehavioralProblems","prediction","setPrediction","error","setError","handleChange","e","target","name","value","handlePrediction","featureValues","Object","values","map","num","parseFloat","isNaN","includes","console","log","response","post","data","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","keys","key","index","htmlFor","id","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/KIRAN/OneDrive/Documents/Desktop/New folder/frontend/src/Prediction.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Prediction.css\";\r\n\r\nconst Prediction = () => {\r\n  const [features, setFeatures] = useState({\r\n    Age: \"\", \r\n    BMI: \"\",\r\n    DietQuality: \"\",\r\n    SleepQuality: \"\",\r\n    CholesterolTotal: \"\",\r\n    CholesterolHDL: \"\",\r\n    CholesterolTriglycerides: \"\",\r\n    MMSE: \"\",\r\n    FunctionalAssessment: \"\",\r\n    MemoryComplaints: \"\",\r\n    ADL: \"\",\r\n    BehavioralProblems: \"\",\r\n  });\r\n\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setFeatures({ ...features, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handlePrediction = async () => {\r\n    setError(\"\");  // Clear previous errors\r\n    setPrediction(null); // Reset previous results\r\n\r\n    // Convert features to an array of numbers and validate input\r\n    const featureValues = Object.values(features).map(value => {\r\n      const num = parseFloat(value);\r\n      return isNaN(num) ? null : num;\r\n    });\r\n\r\n    if (featureValues.includes(null)) {\r\n      setError(\"Please enter all feature values correctly.\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"Sending features:\", featureValues); // Debugging log\r\n\r\n    try {\r\n        // Send the data to Flask backend\r\n        const response = await axios.post(\"http://127.0.0.1:5000/predict\", {\r\n            features: featureValues\r\n        });\r\n\r\n        setPrediction(response.data.result); // Ensure correct key from backend\r\n    } catch (error) {\r\n        setError(\"Prediction failed. Check the inputs and try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"prediction-container\">\r\n      <h2 className=\"prediction-title\">Alzheimerâ€™s Disease Prediction</h2>\r\n      <div className=\"input-form\">\r\n        {Object.keys(features).map((key, index) => (\r\n          <div key={index} className=\"input-group\">\r\n            <label htmlFor={key}>{key}:</label>\r\n            <input \r\n              id={key} \r\n              type=\"number\" \r\n              name={key} \r\n              placeholder={`Enter ${key}`} \r\n              value={features[key]} \r\n              onChange={handleChange} \r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      <button className=\"predict-btn\" onClick={handlePrediction}>Predict</button>\r\n\r\n      {error && <div className=\"error-box\">{error}</div>}\r\n\r\n      {prediction && <div className=\"result-box\">Result: {prediction}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prediction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}